it's on like donkey kong this will probably be my most popular video ever and it's going to be ridiculous so like and subscribe and tell a friend okay so for some background i posted this video about my uh ability to compress anything with um with gpd3 so what i did was i wrote this quick little script um and a prompt it just says write a detailed summary of the following you give it a chunk and it outputs a detailed summary what you do is you just have an input file such as in this case alice in wonderland and i break it into chunks so in this case i broke it into 4 000 long character long chunks you summarize each one you put it back together um and then you get an output so this is a summarization of alice in wonderland it's about 25 of the original length uh someone asked what if you just do it recursively because uh on the video i think uh yeah let's see oh i thought it was on this i thought it was on this video anyways this guy on reddit said r decreasingly verbose if you're not familiar with this subreddit it is hilarious so here's an example like where it's just like here's a poem and and you ask someone to like make your your thing want to talk but can't i want to tell you so you just make something as concise as possible to the point that it's comical so i realized i missed a golden opportunity here so what we're going to do is we're going to take the output because i already ran this once and we'll put that as the new input then we're going to do concise summary because if you watch if you watch the original video you'll see that a concise summary loses a lot of detail and we're also going to make the chunks bigger so the two things you can do you can change the chunk size and then you can also change the adjective that you use or the prompt that you use to do the summary so if you use concise it'll be very small very short very compact this using this one it it compresses at a ratio of about ten to one um if you use detailed summary it's about um one to four or four to one um so 25 or 10 of the original size so we're changing it to be um oh and then the chunk size is like how granular it will be right because if you summarize a thousand characters like you'll get more of the detail there if you so if you summarize you can't get much bigger than this right now i you probably can with um davinci uh instruct o2 or text davinci o2 because that has a token limit of 4000 which is about 12 000 characters so you could probably go up to like eight or ten thousand characters easily um but you also still need to have enough room in the prompt for the output so but a five thousand character chunk is pretty good that's still about a thousand words or so maybe twelve hundred words um so we're gonna we're gonna we're gonna run this again and um i'll just keep running it and see what we get so this is i we're just gonna we're gonna make alice in wonderland as concise as possible i think uh open ai they they did it down to like 136 words we're gonna go we're gonna go full bore um okay so this was the uh cd recursive summer uh summarizer python recursively summarize okay so you just watch this run for a second if it takes too long i'll pause the video i don't want you to get bored um and for whatever reason it lately it's been taking a minute to warm up i don't know what it's doing was waiting for the api are you awake come on come on come on come on wake up wake up wake up that's there we go okay alice falls down a rabbit hole etc etc alice meets a group of animals oh here's what i'll do i'll make this a little bit more visible because it i have it print i have it print out each chunk as it goes so we'll do um triple new line that'll be fine okay this is still going kind of slow i don't know how long it's going to take so i'll pause the video real quick and then we'll read the output and we're back i had to make some more tea while i was waiting um okay so it finished running the original output uh or input was 45 000 characters you can see that at the bottom of the screen let's reload it now it is 19 000 characters okay so that cut it by about half so let's take the output and go put that into the input so now the next input is going to be 19788 characters and we will run it again make sure the prompt yes concise summary recursively summarize 5000 character chunk so this will take about uh four iterations um we can probably just watch it live okay so this is iteration number three because with the first time gave us the 45 000 character version and then we got the 20 000 character version and so now we're gonna go see how much smaller we can get um yeah i'll just pause the video again as you don't need to watch this and we're back once again it finished pretty quick this time as expected so the input here was 19 000 characters just shy of 20 000. the output let's reload it four thousand seven hundred and thirty five characters all right we're getting there all right let's do it again um alice falls into a rabbit hole and finds herself in a dark tunnel so it's still coherent um one thing that i that i noticed is uh it did cut off one of the summarizations because i limited the tokens to to 1000 so i'll limit it to like 1 500. um just we don't want it we don't want to artificially just cut it off at the knees okay uh yep i think we're ready to go um oh wait no there we go the input is now 4700 characters long let's rerun it so this should just take one loop so i won't pause the video this time because it'll just be in and out [Laughter] there we go so now we've gone from 4 700 characters are 45 to 266. alice has a series of adventures in wonderland after falling down a rabbit hole she meets strange creatures like the mad hatter and the cheshire cat and is eventually put on trial by the queen of hearts alice escapes and wakes up finding that it was all a dream not bad not bad so this was i think that was iteration four um but we can go deeper so let's copy the output back to the input save it and run it again oh it just said the same thing okay it didn't do quite a good job as like becoming decreasingly verbose so now we've got to improvise make this decreasingly verbose like on r slash decreasing the verbose i'm really disappointed in gpt3 okay so it looks like it converges on something that is that is very concise ah i'm actually really disappointed i'm sorry guys i wanted this to end up just being like alice had a dream um let's see uh uh let's see summarize the following as concisely as possible sacrifice detail if necessary extremely concise summary let's see if that works okay okay cool so let's let's update our prompt and i don't mind overwriting this because it's all going to be in the um in the github repo like you'll you'll be able to see the history of the file and also it wasn't a particularly complex prompt anyways okay so now input and output is the same so let's rerun it again sorry we had to improvise here there we go finding it was all a dream so we go from 266 characters to 219. we must go deeper again i hope you guys get all the references okay now we're down to 174 characters alice falls down a rabbit hole has adventures with strange creatures is put on trial by queen of hearts and then escapes and wakes up finding it was all dream now it's down to one sentence all right let's keep going [Laughter] more all right now it's down to 112 characters eat your heart out open ai mine is more concise alice falls down a rabbit hole and has a series of adventures before waking up and realizing it was all a dream still accurate yeah again [Laughter] alice falls down a rabbit hole has some adventures and wakes up 66 characters hmm let's do it again i'm having way too much fun with this alice falls down a rabbit hole and has some adventures uh oh we are sacrificing detail we're down to 55 characters and again uh oh okay this looks like as far as it's gonna go we got it down to 55 characters i'll call it a day
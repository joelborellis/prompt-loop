hey everybody David Shapiro here we have a very very special podcast today for our decentralized future in this podcast episode I interview professor franconi and Ohad asor uh from Tao now tau is a company it is a startup well it's been around since 2015 and they are working on decentralized artificial intelligence but it's a kind of artificial intelligence that you might not be familiar with it is incredibly disruptive and uh it's pretty it's pretty complex and that's why this episode is so long but just to give you kind of a preview as to what this technology does is that it decentralizes the development of software now that might sound very simple and conceptually it is simple there's a lot of problems that go into that but the other thing that it does is it creates a store for all human knowledge as it develops software and solves problems and so because of that the network gets more intelligent over time and gains new capabilities over time and that has a just absolutely profound astounding implications which we get to by the end of the episode so I just wanted to give a brief introduction and then and then we can go ahead and dive into the episode so I hope you enjoy this interview with professor franconi and Ohad of Tau thanks everyone for joining this episode of our decentralized future uh today's episode is really exciting we've been looking forward to it for quite a while um I've got with me Professor Enrico franconi and Ohad osor um from Tau now these folks have been working on the Tau Network for since uh 2015 I believe and uh this is an incredible technology it took me a little while to understand it and once I did I realized this is the way of the future and so when they reached out to me and asked me to uh to host this episode I said yes absolutely let's do it um so without further Ado I'd like to introduce my guest today so first we have um Professor Enrico francone who is uh welcome um who has been uh like myself a uh lifelong Problem Solver um and our in our introductory discussion he told me all about how he just loves solving tough problems and here we are working on very difficult ones so uh Professor would you like to give us a couple words about yourself to introduce yourself okay thank you um well I am a professor in computer science in general but most specifically in Ai and another representation since more than 30 years now and what I like to do and what I believe is the right thing to do in in the field of AI is to provide technologies that um make sure that whatever system you build based on AI can be trusted so and we know that the the science of trust since 2000 years is logic and so basically this is leading to a scientific field research field which is called computational logic and the computational logic applied it to AI brings to what is called now logical AI which is what I'm doing and and I found in Tau a group of people there is a smart group of people that have the same ideas made the same goals as my research goals they of course want to make a real world system and while I'm just a professor from the University doing research so I think that joining these efforts is something very interesting excellent thank you so much for the introduction and for being here today in early 2015 after someone from from the internet and they told me someone Anonymous told me about an idea and how about the necessity and the idea for a blockchain to be controlled by its users and he came up with some initial design but it changed a lot since then and that's how it all started excellent yeah so speaking of blockchain um that will be a that is one of the major Technologies uh underpinning the Tau Network um but before we get into some of the technical details in the history of Tau um let's hit on let's ask the big question uh for our for our viewers what is the what is the general goal is to create this decentralized network can you guys give us a little bit like a high level overview what is the goal of Tau and and and of decentralization um who would anyone who can who would like to go first uh Professor franconi or Ohio hahaha in all existing decentralized networks there is some big elephant in the room of something very centralized everyone somehow ignores maybe maybe not everyone which is the centralized development team how can we seriously take a decentralized economy like I don't know Bitcoin controlled by a bunch of computer geeks like me how can how can it be any wide enough shoulders to carry the whole the whole world the centralized control of the development team he's a big bottleneck for adoption and it is a problem by its own who promises that the centralized development team will take the right economic decisions and indeed they themselves know this and therefore they avoid taking economic decisions I'll give you the centralized in a sound way in a constructive way that how the network itself should be like and that's what we do so to say that in another way the goal is as you said um to take control away but not from from everyone but to take control away from any kind of centralization and distribute it to everyone who participates in a network and the example that you gave is like Bitcoin or other economic networks so that that way everyone has a stake in deciding not just what the network does or what the organization does but how it is coded correctly even participating in the in the development and building of that Network true that's height you can look at it software is there for one and only one thing which is the users software is only for the users but somehow the users have little to no voice or influence on how the software should be like next time your phones ask to update itself how does it feel who knows what they put them ah if it doesn't feel good but it's all for the users you are the user why you don't have control over this well there are very serious um theoretical practical social problems associated with it you can ask how can a large group of people the whole audience take any collaborative decision whether it's blockchain also for anything that's a big problem by its own and then you have an even bigger problem how can a large group of people not only take a decision together but even have a discussion how can one million people have a meaningful discussion altogether and those are indeed problems that we address upon the theoretical problems there are some very deep theoretical problems here that we can speak about right and yes in methodological problems and we can speak about everything yes yeah so the the conceptual problems like you said it's it's a matter of organization um is is one thing is for for anyone in the audience who has ever participated in any kind of software development or or any kind of um uh concerted group effort um organization becomes intractable once the group gets too big but with technology platforms today that affect everyone to your example you know everyone uses phones computers uh you know whatever you're watching this this video on today um that has there's a lot of control and management that goes into that but then countless hundreds thousands of developers that go into that uh that effort and organizing that is uh not a solved problem and as you mentioned there's conceptual and methodological um topics that we'll delve into in just a little bit about how to solve those problems uh Professor franconi did you have any um anything to add to kind of the overall goal of the Tau Network well uh when you have this goal of involving so many agents participating to this uh to this effort then something that you have to uh somehow something you have to think about is how these agents this one million people or whatever even more than 10 people can trust the system uh that is taking this helping them to take decisions and clearly the good old way of discussing so I hear to you I hear you you hear me I try to understand what you're saying if I don't understand I ask you to for clarification you you reply you meanwhile understand what I'm saying so there is a protocol in communication that help us to understand each other and to reach an agreement and and this protocol follows as we know since 2000 years logical rules so the say the notion of argumentation and syllogism studies from the ancient Greek philosophers and so on and rhodesians in 19th century and the 20th century however when we want to scale up you and then you want to say well we can't really imagine a protocol that involves discussion and trying to understanding and so many agents even just more than 10 whatever we realized our everyday life if we try to make a meeting with more than 10 people I mean unless you have a major coordinator that tries to understand everyone and try to mediate then this this discussion is not is not going anywhere however even this mediator cannot do anything if there are 100 people in the room uh so how do we reach agreement how can we trust and how the user can trust this agreement then this is where logic comes in so this new protocol of argumentation and discussion and finding agreement is in my opinion has to be granted on Logic on on the idea that whatever decision the system takes is uh can be trusted and what is interesting I guess this will be discussed in depth later is that in the logical language of Tau uh allows also to discuss the protocol on how we reach agreements and and we can Define so user can agree on how they will agree from now on again an understanding fully and and entrust on this new form of agreement potentially and so that's my perspective on whatever I had said before so my my contribution my interest is in this logical Foundation of all these things okay excellent thank you so much so to to summarize uh another function of Tau so one one part is developing software in a decentralized manner but the other part of that or I guess a problem that you have to solve to do that is coming to consensus with large groups of people how do you collaborate and come to consensus with arbitrarily large groups and that's what you're talking about with coming up with logical uh protocols uh and and such in order to arrive at those agreements or arrive at consensus is that is that a good summary yes yeah okay yeah I would say that your perspective of Ohio just to mention to to specify this summary so in a sense also this protocol is a piece of software is a procedure that regulates this this conversation these argumentations and as such it will be subject to the same ways of being developed and understood and agreed upon as the general software development or consensual finding in Tao okay excellent yes and we will we will delve into um into tau's particular Solutions here in just a moment um but a quick preview for the audience so some of the things that they've worked on and this is not an exhaustive list of of the breakthroughs that they've had one is the Tau metal language the Tau language and the Agora token but we'll get into those in just a little bit um so well thank you for helping get us oriented as to what are the problems that Tao is trying to solve um but let's take a step to the side just for a second because um what I want to do is is just spend a few minutes um informing the audience for anyone who doesn't know what a Dao is a decentralized autonomous organization and how that relates to other existing Technologies like blockchain Ohad would you like to kind of introduce the concept of the Dow and the blockchain I am though isn't it something that um intended to to be an organization that is controlled by the users that is decentralized and and typically they do so by um very basic means so remember that I asked before how can a large group of people can reach agreement well voting that's the method that comes to mind and that's what existing doubts basically do and but maybe to take a step ahead there is one fundamental problem with voting the problem is that even though everyone have equal I to vote it is still not the case that everyone have effectively equalized to propose what to vote over because even if you have the right to propose who is going to even read a million proposals a day so even if everyone have right to proposities by no means effective so what people do is create hierarchies that in particular determine what to vote over but then you get huge loss of information it your opinion no matter how good it is or correct it is will most likely not be incorporated and these fundamental real life problem is also reflected in the Taos as we know them the the one of the chief well so there's there's a few problems that you elucidated here so one is is at present one of the one of the ways that everyone is familiar with in terms of making group decisions larger decisions is voting but there are some problems with voting and we'll get into that um but then also as you said even just integrating everyone's feedback that's a huge problem and that goes to to the problem of anytime you have more than 10 people in a room you can't hear everyone you can't get everyone's opinion but then if you get to the scale of thousands millions whatever um you have to as you say create you have to delegate or create hierarchies and and one of your points is that Dows have not have not fully solved this problem yet so this is this is something that differentiates the Tau network from an ordinary decentralized autonomous organization correct and yes yes very much so so you can you can look at it as using the economical term of diminishing returns so in economy um diminishing returns means uh like a typical example is that each a new team member in a company contributes less than the next one so if you have 10 people and you add another one it's not going to be 10 tradition it's going to be less similarly in discussions um if you double the number of participants you are not going to get double the outcome and at some point you are even going to get Negative outcome and indeed our solution solves this problem completely in the sense that if you will have 100 times more people you will have 100 times more utility at least that is a big claim but uh I believe it and hopefully by the end of the episode our users or our viewers will believe it too um Professor franconi um previously we talked about some of the some of the specific problems uh conceptual problems with this in terms of and also Ohad um either of you feel free to jump in but the limitations of language of English language or German French you know any naturally can conceived language there are limitations that that also help or I guess prevent um you know agreement or that utility um so what uh what I would like to do is ask what are some of those what are some of those limitations and what are some of the solutions conceptual solutions to the limitations of human language or even um uh formal logic as well okay I would not say that the language natural language is limited is actually I would say they're all deposites so the natural language is too powerful indeed I can say whatever kind of concept I'll ask that as it could be in natural language and explain it to you so the problem is exactly this one if you want to translate a communication so a a movement of information from an engine to another one from an agent to the centralized system whatever we need to be sure that we understand each other and in the context of Concepts which are known so when we communicate say as human natural language for example uh we need to know two things we need to speak the same language both English speaker for example but also we need to have the same conceptualization of the world so we have to not only to understand English but you have to understand the meaning of words when I say elephant I want I need you to be sure that you know what an elephant means maybe if you are a child that never left your your village whatever in Northern Carolina then maybe you never you never seen an elephant maybe you never know you don't even know what an elephant is so it's not only a problem of knowing English is having Concepts Associated to words and if you talk if you put a an agent which is a computer in in this game of course I may try to teach the computer the grammar the language the English language for example it's very hard because it's uh there are so many variations but the heartbeat is to be sure that the computer the agent understands the concepts and for example this is the major limitation of language models in in AI based on neural networks nowadays like gpt3 and stuff so they they circumvent the problem of the complexity of lung of the syntax of the fact that that the language is very many things can be seen as many many any any concept from the express is many more different in many different ways and and it's very hard to enumerate all of them so what gpt3 does and all this language natural language models based on deep learning AI uh they were just digest all the possible sentences ever uttered on the internet so that statistically they they basically get an idea on how the language is built but the major limitation which is a center of very interesting debate in AI with Gary Marks and stuff is what what the computer understands about the concepts which are embedded in the words so you can connect words in apparently meaningful sentences because they resonate well to our cognition but they they really the agent would never understand exactly the content so that's why when we deal with natural language we have to focus on on meaningful fragments of it so we we will never allow complete natural language freely spoken so because we want to be certain that we understand hundred percent of what any agent or any of the million ages is going to say so this means that the the computer eventually the the say the software that controls um Tau this communication which is also generated by discussion in Tau Etc but this is not the story but we have to be sure that the definition the meaning of all the concepts and the words is present in the agent in the main agent itself and so this means that maybe at the beginning Tau will be very stupid we'll understand very few Concepts and the conversation among agents will teach the computer more Concepts but in the real sense right so definitions what is an elephant well is an animal that lives in some countries it's gray as a trunk whatever and then of course we'll we'll I don't know we will have some some notion about the object the concepts that people may want to talk about in this way we have realized we have limited the focus in communication to what we call what has been called what is called normally in in research and application computer science uh control natural language so we limit the syntax to be usable Enough by everybody so we cannot speak freely it's just like me as a foreigner not as a native English speaker I would speak English so I subject verb object right it's a very simple sentences not so simple but again somehow a language is sort of this International English that everybody would understand and would be able to use plus the fact that we understand all the words all the concepts that are embedded in this uh in this in this natural language so uh somehow unlike we were saying is the limitation of the natural language that is unlimited and we want to limit yes yeah so the the because it's so powerful you and you introduce problems like the the flexibility is computationally difficult but also the ambiguity um is a major problem of not just syntax but the meaning of individual words and um and and Ohad I remember um you had mentioned previously um the the mathematical aspect of language versus controlled language um would you would you like to add a little bit to uh what Professor franconi just just shared and maybe just one thing because Professor Franklin basically covered the log and which is the concept of decidability that is the question when you have a computational task for example the task for finding a contradiction among statements it turns out that there are many many computational tasks that cannot be solved in finite time they need infinite time to be correct those taxes be correct because you can do a finite computation and be incorrect right yes and and in this case is called undecidability the things that you cannot solve in finite time now um what people in the field of logic do they Define languages and they ask whether determining whether any statement in this language contains a contradiction is decidable or not and then if yes then you call the whole language decide the bell and if not you call it undecidable it turns out that even very simple languages are already undecidable for example um the language of arithmetic the natural numbers one to three with addition multiplication is already on the side open okay this was this is the famous Gathering completeness building from a hundred years ago there is the trade-off between expressiveness and decidability the more you are able to sing the language the less recyclable it becomes and in particular natural language because we can express arithmetic natural language and of course natural languages and decidable there is another problem which which is about consistency some languages can um contain a contradiction in the very definition of the language or let's say you can construct sentences that are not true and not false any natural language you can do so indeed maybe that's a typical example is the liar paradox the sentence that cannot be true and cannot be false so you want a language that is consistent and is decidable in the programming language World there is the concept of curing completeness a language that can express anything that the theoretical construction of what is called the turing machine can do and indeed programming languages try on purpose to beat you incomplete and for people who remember how ethereum began their main goal was to have Smart contracts in a language which is during complete but during complete languages are undecidable the task of asking questions about statements including complete languages in particular asking whether two programs will return the same output but the two problems are equivalent is undecidable now um one thing that sometimes people neglect is that you don't need to be curing complete if you need your incompleteness no more than I need shampoo because Turing machines they are mathematically equivalent to ordinary computers completely except one point they have infinite memory are equivalent to computers with infinite memory so you are never going to have real Turing machines anyway and taking the example of arithmetic I said before there are Infinity many numbers but guess what only mathematicians care that there are infinitely many numbers there are but no one cares physics physicists don't need them programmers don't need them no one cares that there are Infinity many numbers when did you ever run out of numbers you don't care you don't need it it is true that there are infinitely novels but you don't need it I'm not going to say that the way we achieve the side ability is by limiting The Machine's memory or by assuming finitely many numbers we are doing it differently we achieve the side ability while maintaining the infinite but I am pointing out that you don't need to go to undecidable languages stay within the set of languages and enjoy the decidability of being able to get answers to your questions another way to put it there is an algorithm that gives answers to questions and decidability one way to say it is to say there is no algorithm you want languages with algorithms that tell you whether something is true or false Yeah by by just uh picking another side of the argument of Ohad this is important to have a decidable language with an algorithm that actually exists and then terminates which has to be correct so in all the notion of disadability is based on the fact you want an algorithm that does exactly finds exactly a solution to your problem and and maybe for that particular problem such an argument terminates doesn't exist so now now we want to have decidable languages anomaly that the language for which such angle determinates exists and this argument has to find the the right the correct answer to your problem and the only way to do that is not to let programmers in a software house to build these programs but always determinate but to employ mathematicians logicians that generates algorithms with together with a mathematical proof that this argument does do the right thing and this algories terminate and exactly with the right answer so I go back to my very first statement about trust so if you employ logic in this whole Endeavor you actually guarantee that this the algorithms do the right thing there is a theorem proving that so you have not to worry about whatever the computer tells back to you moreover you can decide what the the process that the computer takes to give you an answer excellent thank you guys for that um that answer this these topics are so fascinating to me and and I think that they'll be fascinating to to our audience as well so we've we've set up two pillars right uh collaboration and consensus and the problems with that and then we've also talked about language controlled language uh decidability and and completeness versus incompleteness so now let's link the two conceptually how do how do the problems of um completeness or intractability relate to collaboration and consensus and this will also lead into Tao's Solutions how have you guys solved these problems and brought everything together Ohad would you like to start and yes in fact there is one big problem that we didn't speak about because the problems that we did speak about up until now have Solutions in the literature of mathematical Logic the other side of the languages and there are solutions but there is one big big problem that has no solution and we had to invent the solution and the problem is a language that can speak about truth of other sentences in the language the logicians proved that in a certain form and such a language cannot be consistent it must contain a contradiction this is called tarsky's undefinability of Truth but there is a serious real-life need in being able to do so so we need to find we needed to find a way to have maybe a more limited setting not exactly the setting the task he considered but still allowing us to speak about rules of other sentences and this we can relate it to with two examples to well maybe three examples to blockchain to Ai and to real world law so we spoke about blockchain that is controlled by its users taking it more down to earth so in each block you are gonna have the code of the network itself a definition of what the network should do the whole point in blockchain is a condition of accepting or rejecting a proposed block but for example in proof of world you accept it if the harsh satisfy certain conditions but if the code contains if the block contains statement of the them Network itself and the current Network need to speak about this those statements ask questions about those statements all in the same language otherwise you're going to need Infinity many languages and get an answer so that's a blockchain example take an AI example there are the three laws of robotics by Asimov that the robot will never harm humans and so on I say that you need a fourth law for boutiques which is that any future software update of the robot will also admit a lot of robotics you don't want to plug in a USB key to the robot with software update and it starts killing people you want the robot to reject this update if it does not admit the rules of robotics this is the same problem that the current field of mathematical logic cannot handle the update is written in the same language that the robot is written and you need the same language to ask whether another statement in that language is consistent with another statement being the laws of robotics um self example the law of changing the law you have law or height now you also need laws of changing the laws because if you don't have a lot of changing materials then either you cannot change them or there are no conditions of changing the law energize me English you can always change it so you need loss of changing the laws but then you are going to need laws of changing the laws of changing the laws because if you don't have lots of change with a lot of strange the laws then you cannot change the law of changing the law and so on so we are going to need infinitely many loss just to begin with what are we gonna do well you need the laws of changing the laws to refer also to themselves for example imagine Constitution that says if a proposed law contradicts the Constitution then it needs 60 majority otherwise it needs 50 majority those three examples are all about the same thing languages can speak about truth and contradiction of its own sentences and thus this was our biggest theoretical effort and we achieved that and then we have to move on to the second theoretical effort which is after we achieve that this is software it is a language has to be able to be a software specification language because we are all about software control by its users production controlled by its users it's not for specification language as are characterized by having a temporal dimension first do this then do that so we took us another quiet way to turn this language into a software specification language but we achieve that as well and that what what is that that is something you have actually achieved and is ready or nearly ready correct yes yes it is the the ready on paper and we are now implementing it luckily we don't need to implement it from scratch because we already implemented maybe all the Machinery necessary to implement this language and hopefully in the next month we can see fine excellent um yeah tell us a little bit more now that we've we've you've done such a great job of outlining the problems and now we're getting to the solutions that you that you've engineered and and and begun engineering and and implementing so let's delve in those um so some of the some of the solutions and I apologize if I miss them but some of the big solutions that you've come up with is the Tau language The Tao meta language and the Agora token so would you like to walk us through each of those Solutions and also any that I missed I apologize yeah so what I described now is the tower language it serves several purposes first it is a very powerful execution engine for logical tasks it is um in many senses equivalent to relational algebra relational algebra is the famous SQL that virtually all databases or SQL database or relational databases work with it is not SQL but there is a deep connection but um it implements relational algebra in in a compressed way and this kind of representation allows you to um to be a powerful logical solver by its own and the Technologies from tml will indeed be used across all our logical tools is also and this gives it its name meta language is intended to be a compiler compiler a tool to write translators from one language to another so it contains a very powerful parser maybe the best passer that exists on the market and tools that allow you to take the past three and manipulate it and by that great translators so to sum up tmn main three things is a certain kind of database of compressed database that in certain tasks it is orders of magnitudes faster than other databases second is a powerful execution engine which also incorporates both execution I will explain it in a moment and language for writing translators now for proof of execution that's something that we walk on if if I if you give me a program you ask me to run the program let's let's say the program we can say so no let's say um so I come back to you I tell you the program returned yes how do you know I didn't make it up how do you know I really end the program in absolute sense there is no way to convince accept something that is equivalent for you running the program yourself again but then what's the point then we could just run it without giving it away turns out that other under cryptographic assumptions I can give you a cryptographic proof that dialing was correct the cryptographic means it's not a logical proof but it is a very hard to fake so why don't you say that everywhere why you cannot write now give program to other people and get a cryptographic certificate well because it requires to convert the program into a very specific form and that's a big headache and in tml because it is converted to the binary decision diagram form it is already in the form that suits this kind of algorithm so for tml program you are able to give a short certificate and this gives rise to important blockchain feature foreign existing blockchain networks with smart contracts um all nodes in the network need to earn the smart contracts as part of the block verification process so the computational capacity of the whole network is as of one home computer and all the work is repeated why not one node runs the contracts and supplies proof to the other nodes that this is the correct answer and that's indeed yet another aspect of how the proof of execution of contracts all things in or other things in general and so the town metal language is what enables this distribution of not just computation but also the proofs um and then and that that relates to the logic and the trust so uh Professor franconi earlier you mentioned how do you how do you trust right how do you how do you arrive at that uh at that place where there's agreement um and that's that's a bit of what Ohad is mentioning what is what is your uh your take or uh reaction to some of those some of the solutions that you guys have come up with with the Tao meta language uh well if I can go back with other examples or I'd mentioned SQL and tml an assembling SQL and based with uh this very powerful data structures Etc so SQL database technology is basically making a business of 17 percent of all ID so 70 of all ID money goes to relational database technology that's what companies do that's what is really needed and Banks use SQL Technologies and and Banks don't want their technology to fail they want their systems to always tell the truth about how much money do they have and how much money do they have to give to other people and so on and so forth transaction have to be transferred now SQL is based on logic so SQL technology is logic it's personal logic is when it was created in the early 70s it was created as a formal system and SQL is a language where you can actually access the data and update the data and manage the data and it's all based on on the notion that the answer is always to any query or the impact of any update the data is always trustable because there are formal proofs mathematical proofs that tells you that that's one aspect and well I have this joke they always make that even Microsoft but these are a joke that is good for people of my age when Microsoft was just a nightmare right with Windows crashing all the time etc etc and then then you would say you and the question is how comes that Microsoft as a reliable uh related SQL relational engine this is SQL Server which is very popular still nowadays it always gets the correct answer so it never fails why is that because well Microsoft have to implement SQL their own SQL Server engine by following The Logical rules and they could not do anything else so that's that's why another example joke that involves Microsoft is would you trust an airplane which is run by Windows would you ever fly on that airplane well probably not but you do fly on airplanes why because the soft so we are not so the software in Airplane has not been by Tau but still there is a major technology which uses logic to verify the correctness of programs in complex systems in safety critical systems like Railways airplanes and stuff so you you can transform your program in some logical form your software in some logical form and then you ask to Theory improvers uh questions something like it will ever be possible that in sometimes in the future there will be a configuration of labs engines air conditioning whatever failing batteries and stuff so that at some point this airplane will fall down because of the software of course you want this the answer to be no but you want to trust this answer you want to ask this question and you want to ask to trust the answer by by the system that gives that that tries to to answer this question and the system are based on logic they do logic based software verification which is a very small part we also do this this is somehow similar to the idea of of proof that was talking was said by a lot before but it's it's very limited to that particular contest so the notion of trust is what logic gives you for free and another example that it's what what is why logic is that I would I would claim the logic is the only thing that gives you that it's uh well when we communicate and we start to argue about one something we may argue as much as you wish but there are some things that I may say that you can never counter argue right there is no way that you cannot trust what I say because I'm following a logical argumentation and following some patterns of reasoning which are necessarily correct right and then of course there are ways they can fool you so I can um I can build an argumentation that is not really correct in terms of logical steps but you don't fully understand it because I confuse you with words Etc and so you believe that the argumentation is correct right and the point is logic is exactly the study on which kind of reasoning paths are corrected which not so once you have done this study you can build the ideal discussion in any discussion or you can build a logical Theory improver a logical system that that guarantee that whatever thing you ask them it's it's correct and you cannot really disagree with it so that's the notion of of why this is random logic excellent thank you for that it's always oh go ahead odd I I need the one maybe go take the charger excuse me let's see I don't think we can stop or pause the uh the the video I can stop it but I don't want to have to restart so I'll just cut this one section out um uh but yeah uh this is this is great you guys are are really phenomenal um at explaining these um and we're building up to we're building up to the um one of the key points um so what I'm going to ask next is about how does how does the Tau meta language help with building the software and translating meaning between languages whether it's natural language or controlled language or you know machine language and how does that also relate to software specifications um because that's that's kind of the heart of what Tau the Tau Network produces right that's the output or if you disagree that's um I'm curious to how like how would you define the output of the town now I guess that the metaphor the way I understand because I'm just in part of it tml is the assembler of the old Endeavor so there is this these high level languages like what this could be the control natural language but or the Tau language itself then then is executed over tml so it's uh it can be understood as such you can do whatever you want of course it's very low level so the thing that you can do in tml have to be very specific and again it is guaranteed that whatever it does it does it correctly but it's it's too fine grained right somehow then tau is a much more abstract language and it's much closer to the cognition of people using them so they are the notion of Concepts and relations and then and Transitions and programs so that you can actually express your your consonant software in the tower that then will be compiled into email that's my understanding but probably oh and there's a better way to say it yeah well The Tao language is also very low level yes okay but it's more idea to make it I guess even more yes yeah the layer to convert from control natural language or natural language to the Tau language that would be a different layer but our language had to overcome the theoretical difficulties of speaking about rules of sentences in the same language and having the temporal Dimension to allow it to be sort of specification language and it achieves this in a mathematical way if you see that our language it will make little sense to you because it is a mathematical thing but you can build on top of it something that relates to real life so by building what I guess uh can you expand on that like building building something on top of the Tau language the town metal language um how does that how does that connect to the original purpose of Tau which was that collaboration the consensus and the construction of software in a decentralized manner because this is this is the the underlying um I don't want to say operating system because it's it's different but it's the underpinning technology that facilitates that correct that goal of distributed software development yes but there is one important point to understand here which is the difference between code and specification to give an example suppose you you're a new city you want to reach from point A to point B and you don't know how to how to do that so you ask someone and I tell you you go straight third turn to the right second third turn to the left and so on they don't tell you how many meters but I tell you the second third first term and so on and and you ask another one and they give you completely different directions that hopefully lead to the same place how can you compare and make sure that those two sets of instructions lead you to the same place well you cannot you cannot at the same way it is impossible to say that whether two programs are equivalent as we spoke before and programs are indeed instructions where the computer has to turn at each moment foreign specification the requirements level of different nature your requirement is to age 1.8 to 0.3 and this is not written in the language of instructions you will need eventually to get the instructions but that's not what you really want software is still in the Stone Age In This sense you'll need to call the instructions why can't you like let your Google Maps calculate the instructions for you in the software analogy why can't you just write the word that the computer figure out the how another limitation of traditional coding is that you cannot have Global statements for example I don't know I want to reach somewhere and go to a supermarket in the middle or a more software example never send private data over the network never center with that over the network is not something you can code there is no command that says never do that you need to go over your whole code or places that you send data and or places that you declared data as private and make sure that all pipes are connected correctly why can't you say just you don't survive that over the report and that's it let's let it figure it out automatically another point if we take the two uh um directions instructions of how to reach one point A to point B you want to ask the question maybe download the same but where do they agree well that's a meaningless question but the same way if you have two different programs and ask where do those two programs agree that's a meaningless question but if you have two requirements then ask well those two requirements agree that's meaningful the way to see the mathematical way that we look at it is each requirement is really the set of all programs that meet those requirements is mathematically the set of all programs and then you come up with another requirement and which will be another set and the agreement would be any program that is in both sets so we have to move from programs to sets of programs and to your question how coordination takes place indeed so every everyone can say whatever they want to say about the software like levels and public data over the network and we look for programs that meet everyone's requirements if everyone each user would come up with the whole program then you ask where to programs agree as we said that's meaningless cannot have programming by consensus programming by agreement which is what we do if you stick to code and programs you must move to the requirements level so tying it into layers and the procedures how do we get from discussing if I if I express my requirements you know don't send my data over the network as as one example and of course there's plenty plenty of requirements so a software requirement or specification is as you said the what not the how I tell I tell you what I want the outcome that I want to achieve so how do we get from me expressing that in English or any other French Italian German whatever any language how do we get from groups of people expressing that to finding that agreement because we've said that we've set up all these the the pillars of these problems so um Ohad and and Professor franconi I'd like to now that we've set the stage let's let's watch the play how do you take those natural language discussions that you you know the three of us have about our requirements what are the layers of abstraction that we that that need to happen that you have solved to then get from my my natural language conversation your natural language conversation to get to those requirements and specifications can you walk us through that I couldn't touch the first step which is another language but to logic so this is uh something that is well known in people studying languages so linguists and philosophers and psychologists psychologists in particular more formally which is the aspect we are interested in uh there are scientists that in the 60s and the 70s from montagues to Chomsky that completely gratified how and why natural language is related to a logical specification of it so any sentence that we utter in a language in English at this point has a very precise meaning in some logic and as we say it's even too powerful because we can express paradoxes something like this sentence is false right so then then I can't express this but I don't want to clearly transform this into logic because explained to us before that this will lead to an undecidable or a paradoxical logic which would be meaningless to foreign usage and indeed such a sentence is also meaningless for us as a communication mean so we want to focus on as I mentioned before to the fragment to the very large fragment of meaningful sentences that people sentences that we as a when we communicate we can understand each other now how to translate this in into logical form this is a well-known process and uh it's again it's uh again I guess we inspired ourselves to the Montague work but it's it can be done with current Technologies it's what in a sort of uh no positive way has been called good old uh fashion AI right the golf I think which people doing the neural networks don't lie because this is useless right well I don't know because understanding language is probably not useless and the way people in need an Echoes understand language is uh they don't understand language and if you don't if you really want to do that you have to go that the other way the way that that philosophers and linguists and and psychologists went through so we can have a logical counterpart of of natural language sentences it's not easy in terms of capturing their own General generality that's why that's why somehow in terms of real world application this this endeavor failed of the golf I did not really deliver robust natural language system as the Deep Learning Community provides because it's much harder because we want to understand what the language says as opposed to just statistically generate non-understood sentences okay so we kind of have this logical counterpart so in indeed then we by using logic for example we can replicate this is what Aristotle did in 2000 years ago he created the logic of syllogism that corresponds to the argumentation uh in certain particular patterns and and then once you have this language translated into logic we can employ logic to check whether whatever we are saying is is correct is whatever if you counter argue something against me I can check well your counter argument is false so I can easily check right so and that's somehow what our cognition does hiddenly and that's a really interesting uh cognitive psychology problem why do we trust a good argumentation and why logic well logic formula is just this is the logic is just a way to understand why this is true it's very well understood why logic is the right way to make a documentation which is has to do with the notion of uh entailment being ground on model Theory let's say something like this but yeah so now we have logic and what can go on pass the torch oh hi yeah so um from a convenience natural language interface um or control natural language it will it will not be full natural language you will not speak to the computer the way you speak with other people but in a more limited way from there it should be translated to formal logic which is a mathematical expression and from there all logical reasoning tasks like detecting contradictions or consensus and so on will be done automatically by the very algorithms that we develop to show that the language is decidable which is what we do we come up with algorithm that decides the language and maybe um it is a point to mention a major difficulty in this whole field and which is the necessity the rare necessity to very much combine Theory with engineering logic is a very deep Theory and it's it is also very computationally intensive naive implementation of logic is not going to work in real life you need extremely good engineering as well as extremely good theory and surprisingly or not this combination is very rare in the software development world and I guess this is one of our strength points and indeed we invest a lot in both forms so once you once you said well thank you both for for helping break that that down from um you know from language controlled language formal logic and so on so let's let's expand this or maybe look at it from a different angle in terms of um so we've you know we've talked about the the talmata language the Tau language we've talked about the problems of uh of distributed development of software and as you mentioned getting getting to those specifications those those purely logical Expressions as to what you know the what we want it to do but that's not where the Tau Network ends right that's actually just kind of step one and after that as you talked about before how do we get to the to the how how does it do that how does the network arrive at the actual new software that you know once once people have expressed their requirements um and then you know as you also mentioned uh you fight you find the points of agreement right where do the requirements overlap where do they agree so then what's the next step once you find those specifications how do we how do we get to the how of the software yeah so starting with the directions analogy um so one says I want to go to a supermarket and the other says I want to go to a restaurant they see this to the computer so Google Maps prepares a route that goes to a supermarket and through a restaurant and then the self-driving car execute the South so indeed after people say what they have to say we automatically calculate the agreement we get some kind of specification we automatically run the specification so that's yet another point the specification is executable indeed automatically so this the specification is Excel it is itself already executable it doesn't need to be translated to python or C or anything like that that's right well there should be some program that takes the specification and runs it so you can look at it implicitly as translating it to machine code okay but just like you know Java python that you mentioned they're also not compiled languages there's some interpreter the constant same here we will be interpreter that runs the Tau language excellent I guess excellent by pushing the Google Maps metaphor right this is exactly what the AI does so you really say I want to go from A to B or even take a robot or Google Maps whatever and that's all you have to say then the system finds the execution path so this is the path and this path there are many possibly infinite paths different different programs that execute your desires right your desirada your specification so you may give preferences you can say well I want to have the shortest one or the fastest one or the cheaper one in terms of fuel they need to to use whatever so you have a sort of among all the possible realization of this specification because of course there are many there'll be there will be reason to prefer some over others and and so this is a typical AI problem which in the naive way is implemented as a search problem so you have you want to do things in terms of a robot I start a certain position I know I have to go there first of all I can have some heuristics I can have some some way to to try first so I know if I have to go to to the city center or to the supermarket and know that it's in that direction because you see the tower and that however well I go in that direction but then maybe I hit against the wall okay maybe this is not really smart so well I backtrack and I try to go slightly on the left and then it I keep going trying to go in that direction so I have some driving force which is the heuristics I search for for diff for the solution my party potentially failing and backtracking and then eventually I find the goal that's how Google Maps find the the the the the the your paths the best one the cheaper one Whatever using these kind of principles now what is also quite special in in the technology employed by Tau which is fully an idea of rad is that we don't rely these arguments on third we don't base these algorithms on search but we use them based on a different kind of technology which is Boolean algebras and automata so in this sense we avoid also hopefully somehow uh in in most of the cases the hopefully means that is you cannot guarantee that the solution will be fined always found in always in the fastest possible way but you can approximate the optimality by by minimizing the time that you waste by doing wrong choices somehow right and then you try to find the best program the best implementation of your specification uh in in a reasonable amount of time yes excellent um okay so we have uh well I guess before I declare this are there any other um components or topics before we break into the the result what is the final result of Tau and how are people going to interact with it and you know okay we have a way you have you have described a way to um to develop software in a decentralized manner with this interpreted language um but kind of the question then is like okay so what what can we do with decentralized development of software what is the what is the long-term outcome of this and how is it going to change my life your life how is it going to change the world foreign aspect one thing that happens at the beginning is everyone just saying what they have to say everyone Express their opinion that Mario may not reflect on how the software should be like and as a byproduct you are going to have the most powerful AI in the world controlled by the people that belongs to the people not belong to one entity that who knows what their intentions are and it will be the most powerful because so many people train this AI they just speak like they speak in social networks I will say that we already uploaded our mind to the cyber we just didn't do it in machine comprehensible languages now that you will re-uploid your mind to the Cyber in a way that machine can understand you the consequences of this are bigger than imagination so that's one big deal that is going to happen from this technology and then um suppose after you expressed a lot of opinions now your Tau client knows what you want and knows ways to achieve what you want can automatically organize stuff as long as the staff live in the computer world to give you what you want whether it is Taylor for me a good deal that takes into account my abilities my skills my assets and other people bids and so on or how the how Society should be like and so long well you cannot just go to Google and tell Google give me what I want but you will be able to go to Tao and tell it give me what I want so this this is why when I when I got this in our earlier conversations it it completely blew my mind because for me the difficulty was connecting okay formal logic software specifications natural language but what you're saying is once you have that full stack all those layers of abstraction and and then because it's not just it's not just an individual it's not just me talking to Tao and it and it deriving um specifications from my words but it's also doing the same thing for everyone who's participating in Tau and finding those points of agreement and then it's allowing the Tau Network to update itself automatically and so everyone who participates in a tel Network and we'll talk a little bit about how that's going to be implemented and deployed in just a moment but I just want to reiterate for our audience this is this is this is the key um Innovation here where by interacting with with your Tau client and as I mentioned we'll get into the implementation and deployment in a moment but by interacting with the Tau client over time time it will learn what you want what you need and it's all recorded based on those expressions of opinions and needs through from our natural language correct um so it will take that and then for uh translate it into the controlled language and then further and further abstract it down into formal logic and specifications but then everyone who's participating in Tau will do the same thing and as you mentioned everyone's ideas and needs and requirements and and knowledge will become embedded in the whole Tau Network and that means that the town network will be as intelligent as everyone participating in it but not just as as as individuals it will record those ideas abilities in any new capabilities of the network over time and it will continue to get smarter is that a good summary of kind of how the Tau network is alive in in some respects yes just with one kevia I don't want the audience to think that you're going to give a natural language sentence and it will understand you and that's it for natural language to formal language it will be an interactive process but the user will have to eventually approve the formal statement but other than that yes that's where the system is heading to in the long term yes excellent and so how does this help me help me explain to our our audience because I have I have an idea in my head of what this Collective Network intelligence has because it's it's it forms a layer not just for machines to communicate like you know with with a blockchain right blockchain is is is how machines can can work together uh maintain consensus but this also allows for humans to communicate uh seamlessly not just with each other but also with the machine layer and then ultimately what are the kinds of things that the Tau Network can be endowed with what are the abilities or capabilities or the extensibility of the Tau Network like you know okay like we talked about like Google Maps and stuff but that's that's not even the beginning of what we what what you could do with Tau so what are what is the high end what is the long-term um set of capabilities that you can imagine and like you said some of it is beyond imagination but how do we get from where we are today to the limits of our imagination of the Tau Network walk us through that thank you so indeed the main thing is beyond the imagination but the few things we can imagine and one thing is combining brain power so I will say that I can give you a solution to all probabilities in the world we have a problem you take the one million smartest people in the world you put them in one room until they show the problem well but it doesn't work because how can one million people combine the brain power it's just impossible as for now but if the computer understands them what they say it can help in combining the brain power so that's one thing combining brain power large scale for the first time another thing which is something that we also work on actually implementing but this is going to be a part of Tau and a big part of what our course token is about is um creating an economy of knowledge you can trade single pieces of knowledge directly and indeed we spoke about training the machine formalizing knowledge and so on if there is also a financial incentive to do so you can expect other such magnitude small activity and that is the the Agra token that you're referring to yeah so well another thing is as soon as people are very worried about AI doing the bad stuff and as we said before about the laws of robotics the existing field of mathematical logic does not know how to make sure that the next software update will maintain a lot of robotics and that's a very serious problem concerning AI safety but how far of this problem and how you will be able to reject undesired future Behavior and so the the the to get to that point all the users of Tau will at some point Express that opinion through controlled language through through that process that you mentioned of you know working with the machine to express your desire but say for instance we we collectively uh put in a requirement into the town Network like don't ever launch nuclear missiles right that's the Skynet solution that everyone is afraid of so is is that some is can we literally work on that with Tau like don't ever launch nuclear weapons or or something along those lines like you said the contradictions or the restraints the rejecting of instructions or coding or other things how is is is that how that works yes whatever you are able to say in the language will happen for sure but the difficulty is to say what you want to say in the language indeed right and to write a whole design a whole book in natural language is also how it's not because it's logic then it becomes hard itself also the natural language this difficulty is not going to disappear maybe it cannot be spread among many people because of the combining brain power aspect we spoke about but it's not going to be fully automatic fully easy no so let's take that example of creating a constraint a limitation on the Tau Network something that it must not do right you know expressed in formal logic but let's look more uh more beneficial more utopian what if we were to say something like how would it go about implementing something like let's say everyone on the town networks had uh defined the hat or the what right the specification of make sure everyone is fed make sure that there's no hunger on the planet is that something that could be expressed in the towel language Town meta language and then implement it and how would that work or how would that look and obviously it'll take a little while to get to something like that but is that the kind of thing you know because that's something I can imagine is that the is that the kind of thing that is possible or feasible you know in the next five to ten years well to just Express that of course you can express but you will need to express so much more to reach a level that the system knows how to achieve it okay so there's there's implicit uh prerequisites in order to achieve that outcome but that outcome could be expressed in the Tau Network and then through the process of uh conversation um or negotiation or or exploring those other requirements to work up to something along those lines um or or all the prerequisite steps rather yes that will take what you tell it as is with no modification and no guessing and automatically draw the conclusions so as long as you gave it the means whether explicitly or implicitly to achieve what you want it will achieve it well with the small caveat of the time it takes the computer to compute such stuff but ignoring this caveat it will achieve okay so the go ahead yeah yeah so just to compliment then I guess similarly to what to the success of current deep neural networks that basically they do this analysis statistical analysis of so many things that were said in the past so that they can have an idea what could be meaningful or what is not having a look what is this similarly here but in a completely different levels because again with the notion of trust added is that in order to achieve interesting conclusion the system has to have knowledge so I can imagine that the beginning Tau will be quite stupid in the sense that it does not have a lot of common sense knowledge to to reach interesting conclusion for us humans in certain fields for example if we focus on software engineering well yes because they don't really need Common Sense there but if you make these examples of nuclear weapons or whatever then that's another level of thing however what is interesting is that people by talking by using Tau will uh will add knowledge that since the common sense knowledge is the knowledge that we all of us have even that even though we don't know that we have but it's this all of us it's interesting because somehow it's all this knowledge that we already have an agreement about we all know that elephants don't fly right and at some point possibly I guess because of this consensus mechanism this will be just a fact for Tau right and so it will build slowly all these Common Sense knowledge because everybody agrees on this implicitly and against this because since we are using logic then all this implicit facts are also important so whatever whenever you make a statement that does something implicit well this is it's not exclusively said but it's true anyway because it's implicit uh and so you will that will grow up and and and acquire all this Common Sense knowledge the other thing I wanted to mention is is the idea of the law of Robotics because Tau can also take a very nasty direction if if people want so maybe the majority wants to vote for having a dictator so since they can change the rules they can change the agreement rules they can change how the system evolves they can say Well only if we get the approval by or your preferred dictator so you have this person that because everybody agrees that they want to pass all the agreements through this person or to this agent whatever just mention example now this means that from now since now this is the new mechanism of agreement you cannot change this right because it's a it's a law for this sort of it's a constitution and to change this uh you have to apply this rule itself so only with the approval of the dictator you can change the rule that he is the dictator that's if that gets approved in the first place yes yes indeed but it might not ever get approved so that's why I also conceive that there may be branches different realities of Tau that the one which has a dictatorship or some something like countries right people that create their own majority religious subgroups that create a religious reality or whatever right so that's also interesting I guess um so you what you're saying is that that could be a a smaller implementation or an isolated Tau Network might end up with that set of rules okay now but what if so here's here's where I after learning about this and I was just thinking about it um what if what if Tau ends up much broader like across entire nations or continents or or Global is that is that part of the vision is that part of the dream where everyone is interacting with the same town Network and it becomes collectively more intelligent and and and has the knowledge and capabilities of all humans across the whole planet is that is that part of the dream because that's that's to me that's that's where my imagination goes with the technology that you guys have outlined well I believe that anyone should have a significant voice and in Tao is indeed a voice amplifier and you may ask well if you amplify everyone's voice then what's the point then you remain with the noise but when it does the magic of amplifying all voices without having the noise and I personally yes I want to see everyone saying their opinion in society takes everyone into account whether governments want that or will go this direction I don't know right it wouldn't even have to be like I guess a government could adopt it right like one one early step and I've discussed this concept with other folks is using using Dao's distributed autonomous organizations or like townships or homeowners associations that could be a first step um but yeah it wouldn't necessarily need to be adopted by governments but if it's if it's if it's by voluntary participation right if if I can decide to set up a town node on my phone and then I'm participating in the town Network it's almost like nobody could stop it either is that is that a possible possible future is is that's one of the the natures the robust Natures of blockchain is that it's difficult to turn off yes just like the the most evolutionary thing ever happened in history is the internet and indeed people say what they say in the internet they try to stop it yes we now we have a lot of censorship but people still to a large extent able to say what they have to say although it is propagated only for people who read them there is a limit to how many people you can read every day um you are going to see a summarized map of what everyone says because it can be that two people have three opinions but in a million people they will not be a million opinions there will be a lot of overlap um so you can you can Aggregate and summarize and cluster not just people as a whole but but their opinions and so it says you overlap with this group over here and and that's part of that finding consensus or finding agreement in arbitrarily large populations this is what we call the opinion map shows so you can think about the Twitter feed or Facebook feed they look like this user said that this user said that imagine you could say it this opinion is held by those Industries the other way up so let me throw a hypothetical into the into this is let's imagine a future where there's millions of Tau users and there are opinions that are diametrically opposed that are mutually exclusive does the Tau Network try to reconcile that or is the answer it just doesn't address that issue if there's if there's that level of antagonism how does that work in the network Tau will never guess and will never put words in your mouth it will always be exactly what you told it that's the whole point of using logic okay but I guess maybe not how but let's say let's say if my opinion is is we should feed everyone and that you know I express that opinion and you're in your opinion is we shouldn't feed anyone people should feed themselves and so from if those two opinions are expressed in formal logic at least to my you know amateur brain they seem like they're mutually exclusive right is that right and so what how would how would that be reconciled in the town Network or would it not be reconciled it will not be it is a contradiction there is a disagreement okay to do so there are ways to mitigate it you can if you think about creating a mechanism of debate which is kind of again debate is kind of a game another thing is um who how what consensus means so we can say this thing that everyone agrees on or the majority algorithm and so on and this can also change with time bottom line the users will have to Define how to address these situations there is no out-of-the-box solution I see so to to to walk through a hypothetical where there's any any any point of contention um whatever the topic is if if there can be no agreement on any particular solution part of part of what happens moving forward is there might be a discussion about even how to make the decision what are the decision criteria or what are the other um like there might be a debate mechanism as you said or there could be um maybe the rule is set that you only need 98 majority vote and if two percent disagree they get ignored or you know but anything any rules can be uh conjured up and eventually applied um through the Tau Network that's why you need to change the laws of changing the laws that's why exactly exactly um that's it this is phenomenal I it's still it still blows my mind when I when I sit and think about the potential power of this network because it is a Learning Network it is a new kind of kind of collective intelligence or or hive mind almost um between humans and machines so just I want to then of course I'm excited about this and I'll continue rambling about it forever but I want to hear um uh Professor franconi um you haven't said much in the last uh 10 minutes or so where do you see Tau going like you know obviously you're committed to this project what is your personal dream what do you want to see happen uh well I tend to be more pragmatic and less of a dreamer in the sense of uh well dreaming does not mean it does not mean unachievable means longer term ring I have a shorter time dream uh and I really see this already applicable as it was mentioned before in these small communities I mean like that we have several blockchain systems maybe each one working with different kind of rules smart counters for example the area of smart contracts I think is as a natural application here is a piece of code that nobody understands and you can be fooled by anybody because you give a directive to do something and then the weight is actually implemented is completely disconnected from from what was my specification of what this Smart Control should be so just this small area of application where you have to negotiate an agreement between the all the parties involved in the contract is is a major area of application to me so I I'm much more for experimenting but that's just me right experimenting this small uh confined areas where you can actually understand and focus potentially also on problems and make some app in particular social problems that have to be understood to to to potentially solve the bottlenecks that may arise etc etc I'm very fond of all the technical solution that we have found that the oadden is genius group is is really working hard on this uh that is uh the the open problem which is not a problem there there is the goal to start applying and see these things really in the real world deployed in the real world excellent yeah um Ohad what's what's your dream short short or long-term dream for for Tau the cow is all about truth it is for people like me like us who like the tools who prefer the truth of the false um I hope to that I will bring a little bit more truth to this world to this full of life's world excellent excellent okay um so we're nearing the end of this conversation um what are the next steps for for Tau um what's what's coming down the pipeline where are we at and then how do people get involved let's talk about let's talk about from this day forward what's what's happening with Tau and and what is what is the level of involvement for people like me and and people in our audience and for your environment we have a community mainly taking place on telegram we also have a monthly update every every month on YouTube and people can submit their questions and for the next steps we are now moving to a finalize and implement the Tau language and in parallel and see how to put it as a block acceptance condition on a blockchain and finally to start having a cell phone ending blockchain and so those are the next steps excellent excellent um yeah and and so it's it's it's coming to fruition it's about to be uh live on the network um what are the just as a final question what are the what are the key problems left to solve if any um are there any hurdles or Frank uh it seems like you have an idea of what are the major problems left to solve well uh well it depends on the meaning of the word problem so I see interesting challenges to still be sold and make time making Tau even more powerful so I think we have cracked down the main issues the main quests by having this language that is able in a logic fashion to talk about itself to talk about laws that to change the laws the dynamic aspects to model software to be very powerful and still being decidable so that we have terminating correct algorithms there are new things that we can add to this language new aspects to add is on its exclusivity so we mentioned I guess briefly that the language if we take the most powerful language then this would be undecidable so we cannot really hope to implement it but we uh taking the the the decidable fragment is sort of arbitrary so we took One Direction and so we can still hope to to give it more potential and and then somehow making more interesting for several aspects for example to model formally the notion of argumentation I know there are some aspects in this to this sort of game theory that will be involved in argumentation could be a possible extension of the language there are many many interesting challenges which does not mean that we have problem these are these are just new things we want to to add to the language uh so that's okay so just levels of achievement but no there's no technical hurdles preventing you from moving forward at this point well or are there details to be ironed out but yeah I guess the main things are there yes excellent and yes I agree indeed um you know ongoing effort but we know mathematically that will never end is to enhance the expressiveness of the language and to have um a more efficient algorithms okay so expanding expanding expressions and optimization um but as you said those those that will never end that is just part of the ongoing work excellent um as any final thoughts um you know one or two sentences from from each of you any final thoughts that you would like the world to know about Tau before we uh we close our conversation for the day well I can see my my perspective is a very uh very focused on the technical aspect so I'm not really the one that has the the the conquer in the world and changing the world and pushing for truth in the world from from that perspective I really think that what we have done is really magic is a major technical advances in logic and computational logic and this gives the company A major advantage business Advantage too because we are the only owner so Tau the company is the only owner of this technology and so they they can do these things and nobody still knows how they will get these results and which is interesting as well so that's uh and then yeah I really keep like to keep going working on with the group and then to meet these new challenges and extensions of the language excellent thank you oh hard any any final thoughts for uh for the world um that's how to take it more than 12. we want to take software development to the next level that much more complex will be able to be programmed and controlled by users bring software back to the people wonderful wonderful well thank you both so very much for bringing me into the Tau group and having your folks reach out this has been a remarkable set of conversations leading up to this and I I get chills just thinking about what it is that you're doing and and and the the long-term implications and just How Deeply fascinating and complex it is so again thank you for for the The Talk today and I look forward to continuing those conversations and seeing where everything goes um so thank you thank you to you thank you so much cheers cheers
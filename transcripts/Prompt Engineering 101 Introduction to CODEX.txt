hey everybody david shapiro here with a quick video this one is going to be a tutorial on how to use codex codex is still in private beta so by the time you see this things might have changed i'm not sure anyways let's go ahead and dive right in um we're just gonna do i'm gonna do a couple like python and sql queries and just basic stuff to show you kind of what's what's going on but first um you'll notice the model name is code davinci o2 and then the temperature defaults to zero which means it's deterministic and it'll put it'll output the same thing every time so when you're doing code especially if you describe what you want accurately you're going to want it to generate the same thing every time so temperature you generally want to leave that lower although sometimes you can turn it up if you want to get more creativity um i will do another video about all the parameters and what they mean but for now let's just go ahead and dive right in so ctrl enter to run this it says def get reddit data oh so you might notice that i didn't specify a language i'm going to hit escape because it is going off on its own so i didn't specify a language but the three um individual uh single single quotes that forms a text block in python so if i copy this out oops go to here so i'll just copy this code x01 save it so you see it's commented out basically now what do you think is going to happen if i run this well first i want to delete the stuff that i don't want right because it just kind of took it and ran with it so let's save that and then let's go here let's see cd python tutorial and then python codecs it didn't do anything all right because i didn't call anything um so let's do let's add this here so basically it wrote the function for me but if we go back to this i didn't actually ever call it so we gotta call the function that we wrote oh and let me increase the um font size of this i apologize so you can actually see it there we go okay now we're up to speed all right so then we'll just call this function and we'll do print this function and call it leave it at that all right so now let's see what happens ah name requests is not defined so what the heck um so let's just put plug this in and say uh let's go back to codex so basically what i did i know that went really fast so at the generally speaking with with python you'll see like at the very end if there's an error it'll tell you what the error was now it'll also give you the line right so it says line 7 and get reddit data response equals requests get url etc etc and it says name error or name error name request is not defined so that means it doesn't know what i mean by requests and if we look at line seven you see right here um it says i don't know what this is you didn't you didn't define this anywhere um so let's copy paste this in and and then we'll go to a different endpoint which is edit which is also still in beta so the edit endpoint works on works on code as well so what i'll do is i'll say fix the following error in this python script and so then we'll go back to my command prompt and we'll copy this and we'll say hey fix this error and let's see what it does ah look at that so can you spot the difference it has import requests up here so let's see if it fixed it for me import request that looks right oops let's go back to my command prompt and it returned the front page of reddit in json format which is usable that's a data format that's usable by clients such as python um so there you have it that is that is uh using codex and then the edit feature to fix something um let's see uh let's see if we can make this a little bit better whoops um hang on there we go grab that we'll come back to this and let's say modify the function git reddit data um let's see what do we want to pull instead uh to pull top posts from the last hour and let's see if edit works there oh that was quick it says top dot json question t hour i don't know if that's gonna work let's try it i don't think that that's the right format for for json um i think you have to put the dot json at the end i don't remember though let's see if it works what are you doing there we go hey it worked cool okay so let's go back to codex though because edit is fun but let's go back i promised i promised to show you how to do code so let's do code um all right so what are we going to do instead um i don't remember what the what the comment is on a sql query um what is the comment uh on a sql query it's been a while since i've uh used to explain commons yeah where is it uh dash dash okay it's been a while since i've done sql which so this is exactly what you'd use codex for it's like i haven't done this in a while how am i gonna do this okay so the following sql query um will give me all the details of the um post gray sequel am i saying that right postgre sequel um well just we'll just say post postgre sql database and then we'll leave it at that that's interesting code select from pg catalog pg tables there you go okay it's interesting that um that it had code so it wrapped it in xml um so that's fascinating so but i bet if we just do select um it'll there we go all right and then it it so here's the thing is it tends to just kind of take it and run with it whatever it is that you wanted it to do um let's see uh did of the sequel table of the table where schema name okay um let's see where was i gonna go from here uh let's do um the next query will um show me details of the um table indices i don't know if that'll work but we'll see what it does okay just pg indexes the table constraints oh interesting okay okay so it's just pulling all the different bits from postgre um let's see let's do powershell because powershell is something that i'm more familiar with and my brain just blinked what is the comment on powershell um import module [Music] psutil seriously why why is my brain blanking today uh powershell comment that's what i thought okay my brain just wasn't giving me that information this powershell script will save every prime number from 1 to let's not go too crazy to a thousand um in a csv file okay and so then we'll just do let's just let it go and see what happens hey look at that okay um all right so says this powershell script will save every prime number from one to a thousand in a csv file so it starts with um dollar primes equals um splat and then uh whoops and then parentheses so that's oh darn it what did i do i hit ctrl z too many times can i bring it back please come back okay now let me run it again i'll run this again and i'll copy it out to a different interpreter to a different thing um okay we don't need the instructions how to use although it is nice that it's giving it to us um so let's save this here we'll do language p powershell okay so let's take a look at this so primes it so this this instantiates a list and then we do four so this is a conventional for loop so for i equals two and for while i is less than or equal to a thousand we increment i plus one so that's how you declare a for loop in in good old c or c plus plus it's fascinating that powershell just kind of copied that syntax exactly so then you say is prime equals true and then what you do is so this is fascinating so the logic that it used is it gives us another iterable so it says 2 and then so while j so j starts at 2 while j is less than i so this is our number i we're going to increment j so basically every number up until our um the one that we're we're counting um is is that and then so we use the modulo which is the so you have dividend and remainder so if you divide them and there's a remainder of zero which means it divided in in evenly then you say it's not it's not prime and you break right so then you exit the loop and so then if it is still prime then you add it to the list and then um it exports export csv to path whatever i didn't specify i just said okay drop it on my desktop this won't work because my username is not user um and then it adds no type information i love that type information makes csv kind of like wonky all right so let's let's do a quick thing let's do ise that's not what i wanted ise there we go powershell ise so ise is uh is the integrated interpreter for powershell let's see view script pane right let's close commands now i do want to clean this up a little bit because like um let me show you there's a couple things wrong with it so i don't want this i don't need those i don't need those instructions um and i also don't want to do it i'll just do right host no not debug darn it right host oh can i zoom in there we go okay so then we run this oh wow that was really fast so then 2 3 5 7 11 13 so far so good i don't know the prime numbers off the top of my head but it looks like it got them so there you have it um let me do a time check oh yeah we're 11 minutes perfect okay so you've got you've got your feet wet with um with uh with codex um i've shown you a couple things just right off the bat so you get an intuition of how to get started it often does barf out more stuff than you need um and so it's just a matter of you get the function that you want you clean it up and then you're good to go all right well thanks for watching like and subscribe and consider supporting me on patreon if you like what i do if i get enough supporters i could probably do this full time who knows
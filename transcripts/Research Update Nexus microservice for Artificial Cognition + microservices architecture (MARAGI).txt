morning everybody this is going to be a slightly different video from my normal um this is more of a research update um so i've done a lot of work recently with you know just showing different things that you can do with gpt3 but what i'm going to do now is i'm going to get back to my core purpose which is to work on artificial general intelligence or what i call artificial cognition i don't like the term agi i made another video about that artificial cognition is much more on the nose of what i'm doing so years ago i think it was 2017 or 2018 i cooked up this idea that i called maraghi which is um microservices architecture for robotics and artificial general intelligence now i kind of gave up on that idea because it was there was too much complexity at the time and also only gpt2 was available at the time which was not sophisticated enough then when gpt3 came out i basically created a simplified version of that called natural language cognitive architecture i wrote a book about that and you can actually get it online for free natural language cognitive architecture it's right here it's up on github and so here's the diagram for natural language cognitive architecture where there's a shared database that links up two loops um so that's that's great but now that now that one gpt3 has the fine-tuned models well fine tuning is out when i created natural language cognitive architecture fine tuning wasn't even available so a few things have happened one is fine tuning is now available the instruct series is available which makes it much lighter and faster um and then the third thing that happened is i have learned a lot i've read a lot of neuroscience and done a lot of experiments in the meantime so i'm revisiting uh microservices architectures um for for artificial cognition um and what i'm introducing today is kind of the overall architecture and i'm writing a book about this it's called symphony of thought um it's uh currently with its first uh beta reader actually and then i'm working on draft three and so on um so look for that book in the coming months you all know me i work very fast uh so anyways the nexus is exactly what it says it's at the heart of artificial cognition now what does it do it holds the stream of consciousness it holds all the memories um that happen in artificial cognition and basically what it is is um it's a vector database so this was another problem that that i had to solve was i could use a conventional backend like solar or sqlite or something but those are just not optimal for for associative memory search that you need for artificial cognition now enter vector databases so this is what i started with is vdblight so you've this is becoming more popular it's already got five stars on github and three forks i also created a discussion page because lots of people wanted to ask questions about it so there you go what vdblight does is it's basically sqlite but for vectors and it's not nearly as sophisticated so it's a very aspirational association there um but one thing that i'm going to do is that i'm going i'm already working on this is integrating it with um with feis whoops uh yeah so uh facebook ai search uh semantic search feis which is very fast very scalable um so with all that said um let's see where are we uh yeah so there's vdblight so what i'm doing is i'm going back to the microservices architecture idea and i and i created a version of vdblight that is a microservice it's a rest-based microservice that's called the nexus so what the nexus does is it allows for an arbitrary number of other microservices to participate so basically we compose artificial cognition we compose a brain and they all talk to the nexus and so the nexus has a very simple job um it receives messages from arbitrary numbers of microservices and then it allows those arbitrary those those microservices to then fetch messages to search for them right now there are two primary ways to search one is through associative memory or semantic similarity so vector you just do a cosine dot product of two vectors and it says here are the most similar vectors um because that is the primary way that human memory works so human memory works by by association and so if you see something that reminds you of something else your brain is like ah i've seen this before or if you hear something familiar smell something familiar you see a familiar face you walk into a familiar room associative memory is the primary way that human memory works now the other way that human memory works is that it is temporal so we don't have a clock in our head but we generally remember about how long ago something happened we also remember clusters of memory based on memories that happened coincidentally or at the same time so those are the two primary mechanisms of human memory and those are that is what i have replicated in um in not natural language cognitive architecture in the nexus or vdb light and so if you look at the endpoints in the nexus zoom in a little bit there is add so that's just you add a uh add a record um it just takes in a uh a vector and then you or it takes sorry a dictionary and the dictionary needs to have at the very least a vector and a time stamp if that's all you use it for that's fine but those are the two required fields so we'll see required time and vector um you can add we can have whatever else you want right it doesn't care and then there's search which so this is semantic search and there's three fields required for that vector field and count so that basically says what's the vector that you want to search for similarity which field is going to be in contain the vector i might remove this because like everything just has a vector um so we might just default to vector and then the number of results that you want because say for instance you have like you just want like you know you're searching for a wikipedia article or something in memory you don't need a thousand results but if you're trying to do something more complicated such as um uh curate a fine-tuned data set so that you can improve your models automatically that's one thing that i'm testing and experimenting with and writing about you might need a thousand results you might need 10 000 results so there's search and then there's bound which is give me everything between time stamp a and timestamp b and so this is how you can say like okay i found a memory that i want to explore it happened at you know time index 123.456. give me everything from time index 120 to 130 right and so then you can reconstruct an entire memory based on what was happening at that time what was coincidental um so those and oh and then there's a save function because i realized that um saving the data after every instance was getting slower and slower so you only call the save periodically and solar is the same way like solar you send it everything and then you tell it to save once you're done and i think you can configure it to save automatically periodically or after a certain number of um of uh indexes so anyways this is this is the microservice and then there's a test.pi which is just it does a quick you know it sends it a bunch of vectors and then it performs a search and it and it shows you timestamps um it's pretty fast it certainly could be faster uh ultimately i'm going to use probably something like feis f-i-f-a-i-s-s this thing as as part of the back end so it'll be even faster um yeah that's the primary thing there's a lot of a lot to experiment with but that's pretty much it i guess i can talk about these other microservices so here you see i've got six micro services one is the nexus which i just showed you that's the first and also kind of the easiest one and i've got the core objective functions or what i call the heuristic imperatives now um so this is a microservice that i've actually worked on core objective functions um i've got all the all the experiments leading up to it here um which i've got four different experiments plus a few others that i've started oh wow 11 stars some people are are liking this so that's good um so basically what the core objective functions do is it is always commenting on three primary principles which is reduce suffering increase prosperity and increase understanding so what this microservice is doing is it's always injecting it's well first it's reading the nexus it says what's going on and then it's always offering thoughts about here's how we can reduce suffering here's how we can increase prosperity here's how we can increase understanding and so then what it does is it does a few things one it reacts to the current moment it says this is what's going on this is these are some ideas about how we can do this then if you have another service that says like an action planning service that says what if we do x y and z the core objective functions will also read that and say hey that sound that sounds like a good idea that will reduce suffering or maybe that's not the best idea try something else and so this is like the conscience or the conscientiousness of the artificial cognition constantly saying do this don't do this you know this is this is in alignment with what we want to do yes or no and this is how your brain works right you have parts of your prefrontal cortex that are constantly evaluating your behavior and decisions to make sure that it is socially acceptable that it is legal that it's not going to hurt yourself and so the core objective functions basically form the highest order of this is what we should do so the core objective functions can also do a few other things they can brainstorm right it says okay given the situation here's you know 10 ideas of things to do um and so it's always just kind of barfing that information into the nexus which is then can be read by every other service you can have input services such as things that handle vision and audio and they all dump their information into the nexus and oh and this is all in natural language by the way so all thought happens in natural language you're not going to be dumping in images or raw audio that's what the microservices are for to handle those peripherals so this is this is pure thought this is not going to be in anything other than human readable natural language which is also important for for interpretability and transparency because we want to be able to see what our artificial cognition is thinking i call them aces artificial cognitive entity and so then you'll have output microservices so these are microservices that'll be reading the nexus and as you have action planning and forecasting things that say okay we should do this yes and so you know how like in your head you make a decision i'm gonna do this and then what another part of your brain another micro service effectively in your brain takes that decision and then acts on it in the outside world and there's there's a stack of things that happen in your brain before you you plan something so you get ideas you plan something and then once you've got the plan then once it's time to actually execute that's what the output microservices are going to do another service that you see listed here is the agent service or the um what i'll call the agent model service so this is the the purpose of this microservice is to keep track of who am i what am i what can i do because one thing that's critical is the and this is implicit right you as a human being you know that you have two hands you have feet you can speak you can you you know what you are you know what you're capable of so the agent model service is responsible for telling the nexus okay this is what i am this is what i'm capable of because in order to act you need to have some sense of self and so one thing that most of these services do some of these are more static like the vision service that's just you know it's it's gonna have you know access to cameras and it'll have um you know like yolo models and other models that will that will dump in like a narrative of like this is what i'm seeing right i see a clown running across the street something like that that's going to be relatively fixed however these other services will be learning services so in natural language cognitive architecture there's only two loops right there's the outer loop and the inner loop with with this with artificial cognition with the microservices architecture there are many many loops each one of these microservices has several loops and then of course the nexus microservice it's a it's a rest based service so it's it's not really operating as a loop it's operating uh transactionally but so for instance the core objective functions the first thing that this service will do and the first thing that most services do will it'll look for recent messages from the conductor and i'll tell you what the conductor does in a second but i've done all the experiments that that i needed to to figure out how to build this so now i just need to pull it all together into a microservice so i know that what you're about to hear me say sounds very fantastical i've done all my homework now i'm building it and that's why i'm making this video so the core objective functions the first thing it'll do is it'll look for messages from the conductor what does a conductor do in real life so a conductor of a symphony orchestra tells all the different other services or not services um sections um you know play louder play faster play softer take a break it does it that's what a conductor does is it listens to the whole orchestra the whole piece of music and make sure that all the different pieces are playing together nicely and that is exactly what the conductor does for artificial cognition is the conductor listens to everything going on in the nexus and provides feedback to all these services and those services modify their behavior based on what the conductor says so the conductor is like you know the prefrontal cortex of this of of the artificial cognition it's the organizer of thought um it's the board queen it brings order to chaos and so um the first thing that for instance the core objective function service does is it looks for messages from the conductor the conductor can provide feedback such as slow down speed up or focus on something right because directing attention you don't want services to go like focus on the wrong thing because especially when you have many many services all reacting to each other they need they need guidance as to what to focus on and that's what a conductor does right this is where we are in the piece of music focus on this measure right here so focus on this problem this is this is where our attention lies because the nexus is completely agnostic it doesn't care about what's going on it is just a message broker and in fact i i originally used stuff like amqp a message broker um to to do this but now i'm doing vector database so the conductor focuses on handling attention and i've done all my homework you'll see it in the book you'll see it in upcoming videos um in terms of prioritization and what to focus on so the conductor will be periodically issuing messages this is what we're working on that's called cognitive control so if you have like add or adhd or you're really tired and you can't focus it's because your mental conductor is like let's do that no let's do that let's do this instead it means you're easily distracted so what this conductor will do is it'll say this is what we're focusing on everyone go at this pace let's make sure that we're working in a concerted effort concert concerted effort so that's the first thing that a microservice does is it is it looks for messages from the conductor and modifies its behavior accordingly and then it reads the rest of the messages that have happened recently or older messages depending on what it does because so say for instance um you have a service that's like trying to answer questions or trying to to remember you know the ancient past it might search for older memories right so it'll start by saying okay what is currently going on and so that says like give me the most recent time window and then the service depending again depending on the service it might also use those associative memories to say okay this is what's going on right now now give me everything from ancient history that is related to what's going on right now so this is for instance this is why if you walk into a room you forget why you walked in there because your brain gets a different set of memories it says ah i'm in a new room let me grab the memories from this room um and then it forgets the memories that you had in another room which is where you were when you you know decided to go somewhere else and do a task the same thing happens like you know you go to work and suddenly you remember like oh yeah like you know because it's a different setting it feels different it sounds different it smells different you see different people and so you have this entirely different context and it dredges up different memories that's one reason for instance i'm you know as soon as i finish this video i'm going into the office i my my work productivity changes it's not that i'm more or less productive it's that my brain is in a different context so i do different things when i go into the office it's working differently and so that's what i mean by associative memory so you pull you pull temporal memory you say what's going on right now and then you pull associative memory that says give me everything else that's related to this and then whatever the microservice's purpose is it will then do its work and then contribute some messages back to the nexus so like i said for core objective functions what this does is it can help brainstorm ideas about how to adhere to its principles it can also provide admonishment so for instance if um if you yell at the uh at the your artificial cognitive entity it says like hey you really hurt my feelings um the core objective functions will be like whoa hold on we cause suffering and it'll add messages saying we need to do better next time right so it'll be self-monitoring i've already done all these experiments i know it sounds really fantastical when i say it out loud but i have done the experiments and now i just have to put it into the microservices that's why i'm making this video okay so then what happens so that's that's that's you know first it just looks for messages from the conductor that's why there's the dotted lines um because they don't communicate directly all communication goes through the nexus that is the broker so you can have an arbitrary number of microservices um contributing to your artificial cognitive entities thought um but uh so the conductor just says hey you're you're misbehaving change your you know change your behavior or hey you're doing a good job or this is what we need to focus on um and then you know they do their recall they they pull all the necessary memories from the nexus and do their thing contribute it back okay that's great but then what do they do offline what do they do how do you learn right learning is not one monolithic thing in intelligence your whole brain learns right it's not like oh i have a filing cabinet in my head that's not how learning happens what happens instead is that every section of your brain every component updates right you have parameters and biases and weights or and organic terms synaptic connections that update globally right and so like when you practice something you're forming new global connections all over the place it's not just one like pile of data and so what happens is as there's more data in the nexus what these microservices will do is that they'll pull that data out that says it'll search for data that's relevant to its function so in the case of the core objective functions it'll look for you know cases that it succeeded in reducing suffering it'll look for cases that it failed in reducing suffering and what it'll do is it'll automatically curate those data those um into those memories into data sets and then it will fine-tune newer models in order to improve its performance in the future now another thing that these microservices will do is they're not just going to have one model they're going to have their original model they're going to have every new model that they're trying and what they'll do is they will measure the performance of their own model so this is one thing that i'm writing in my book is that every microservice is going to be responsible for its own performance and that means that each microservice is going to have to have its own objective function or something that it's measuring against and basically that objective function is just how it you what it decides to um how it decides to cultivate and curate those internal data sets and so over time as our artificial cognitive entity gets older the nexus will have more and more memories right it's going to start off with tens of thousands of thoughts and memories and then hundreds of thousands and then millions billions trillions so this is going to need to scale really big which is why i need to integrate the facebook ai semantic search as soon as possible because this is going to be a big search problem so then imagine you've got a trillion data points to to curate new models from right that's great data is fuel for artificial intelligence and so the nexus is going to be responsible for holding all of that data and then these microservices are going to say hey give me this data let me chew on this and learn in the background and then as it trains new models it'll test those models we've already got this in ml ops right there's there's auto ml which allows you to automatically do side by side comparison of models against known known problems known data sets and so it'll need to do all that in the background again because this problem space is so clearly defined for each microservice it shouldn't be that big of a deal i say should i'm probably going to eat my hat on that and so in that respect your core objective functions are going to improve over time but they're also always going to adhere to those three principles then your agent model will also improve over time because as your artificial cognitive entity gains more experiences about what it can and cannot do it'll form a more clear identity a more solid identity as to this is who i am this is how i work this is this is what i'm capable of this is what i'm not capable of there's a there's a slew of other services that i'm planning such as planning services anticipation services and so on but this diagram is um is just kind of like the high level uh of of what i'm doing so uh right now what have i got i've got a uh a prototype version of the nexus what else do i have not a whole lot else other than the core objective functions i've got the experiments here so that's going to be wrapped up into this microservice before too long then i got to work on the conductor i've got all the experiments there anyways i guess i'm repeating myself now so i will go ahead and stop the video now but this is what i'm working on um thanks for watching like and subscribe and um consider supporting me on patreon thanks and have a good day